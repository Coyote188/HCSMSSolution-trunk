<?xml version="1.0"?>
<!--
    注意: 除了手动编辑此文件以外， 
    还可以使用 Web 管理工具来配置应用程序的设置。
    可以使用 Visual Studio 中的“网站”->“Asp.Net 配置”选项。
    设置和注释的完整列表在 
    machine.config.comments 中，该文件通常位于 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<appSettings>
	</appSettings>
	<connectionStrings>
		<remove name="sqlConnection"/>
		<add name="sqlConnection" connectionString="Server=SERVER\\SQLEXPRESS; Initial Catalog=restuarant; Integrated Security=SSPI;Asynchronous Processing=True;" providerName="System.Data.SqlClient"/>
	</connectionStrings>
	<system.web>
		<!--
            设置 compilation debug="true" ，将调试符号 
            插入已编译的页面中。但由于这会影响性能， 
           因此请只在开发过程中 
            将此值设置为 true。
        -->
		<compilation debug="true" targetFramework="4.0">
		</compilation>
		<!--
            通过 <authentication> 节可以配置
            ASP.NET 使用的安全身份验证 
            模式，以标识传入的用户。 
        -->
		<authentication mode="Windows"/>
		<membership defaultProvider="SqlMembershipProvider">
			<providers>
				<clear/>
				<add name="SqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="sqlConnection" applicationName="/" enablePasswordRetrieval="false" enablePasswordReset="false" requiresQuestionAndAnswer="false" passwordFormat="Hashed"/>
			</providers>
		</membership>
		<authorization>
			<deny users="?"/>
		</authorization>
		<roleManager enabled="true" defaultProvider="AspNetWindowsTokenRoleProvider"/>
		<!--
            通过 <customErrors> 节可以配置在执行请求过程中出现未处理错误时， 
           应执行的操作。 
            具体说来，开发人员通过该节 
            可以配置要显示的 html 错误页 
            以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/></system.web>
	<!--
        在 Internet 信息服务 7.0 下，运行 ASP.NET AJAX 要求 
      system.webServer 节。这在以前版本的 IIS 中并非必需。
    -->
	<system.serviceModel>
		<bindings/>
		<services>
			<service behaviorConfiguration="HCSMS.Service.Impl.DinningServiceBehavior" name="HCSMS.Service.Impl.DinningService">
				<endpoint address="" binding="wsHttpBinding" bindingConfiguration="" name="DinningServiceEndPoint" contract="HCSMS.Service.IDinningService">
					<identity>
						<dns value="localhost"/>
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
			</service>
			<service behaviorConfiguration="HCSMS.Service.Impl.KitchenServiceBehavior" name="HCSMS.Service.Impl.KitchenService">
				<endpoint address="" binding="wsHttpBinding" bindingConfiguration="" name="KitchenServiceEndPoint" contract="HCSMS.Service.IKitchenService">
					<identity>
						<dns value="localhost"/>
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
			</service>
			<service behaviorConfiguration="HCSMS.Service.Impl.ReservationServiceBehavior" name="HCSMS.Service.Impl.ReservationService">
				<endpoint address="" binding="wsHttpBinding" name="ReservationServiceEndPoint" contract="HCSMS.Service.IReservationService">
					<identity>
						<dns value="localhost"/>
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
			</service>
			<service behaviorConfiguration="HCSMS.Service.Impl.BillingServiceBehavior" name="HCSMS.Service.Impl.BillingService">
				<endpoint address="" binding="wsHttpBinding" name="BillingServiceEndPoint" contract="HCSMS.Service.IBillingService">
					<identity>
						<dns value="localhost"/>
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
			</service>
			<service behaviorConfiguration="HCSMS.Service.Impl.AccountServiceBehavior" name="HCSMS.Service.Impl.AccountService">
				<endpoint address="" binding="wsHttpBinding" bindingConfiguration="" name="AccountServiceEndPoint" contract="HCSMS.Service.IAccountService">
					<identity>
						<dns value="localhost"/>
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
			</service>
			<service behaviorConfiguration="HCSMS.Service.Impl.KitchenRequestBehavior" name="HCSMS.Service.Impl.KitchenRequest">
				<endpoint address="" binding="wsDualHttpBinding" bindingConfiguration="" name="KitchenRequestEndPoint" contract="HCSMS.Service.IKitchenRequest">
					<identity>
						<dns value="localhost"/>
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
			</service>
			<service behaviorConfiguration="HCSMS.Service.Impl.FrontDeskRequestBehavior" name="HCSMS.Service.Impl.FrontDeskRequest">
				<endpoint address="" binding="wsDualHttpBinding" bindingConfiguration="" name="FrontDeskRequestEndPoint" contract="HCSMS.Service.IFrontDeskRequest">
					<identity>
						<dns value="localhost"/>
					</identity>
				</endpoint>
				<endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange"/>
			</service>
		</services>
		<behaviors>
			<serviceBehaviors>
				<behavior name="HCSMS.Service.Impl.DinningServiceBehavior">
					<serviceMetadata httpGetEnabled="true"/>
					<serviceDebug includeExceptionDetailInFaults="true"/>
				</behavior>
				<behavior name="HCSMS.Service.Impl.KitchenServiceBehavior">
					<serviceMetadata httpGetEnabled="true"/>
					<serviceDebug includeExceptionDetailInFaults="true"/>
				</behavior>
				<behavior name="HCSMS.Service.Impl.ReservationServiceBehavior">
					<serviceMetadata httpGetEnabled="true"/>
					<serviceDebug includeExceptionDetailInFaults="true"/>
				</behavior>
				<behavior name="HCSMS.Service.Impl.BillingServiceBehavior">
					<serviceMetadata httpGetEnabled="true"/>
					<serviceDebug includeExceptionDetailInFaults="true"/>
				</behavior>
				<behavior name="HCSMS.Service.Impl.AccountServiceBehavior">
					<serviceMetadata httpGetEnabled="true"/>
					<serviceDebug includeExceptionDetailInFaults="true"/>
				</behavior>
				<behavior name="HCSMS.Service.Impl.KitchenRequestBehavior">
					<serviceMetadata httpGetEnabled="true"/>
					<serviceDebug includeExceptionDetailInFaults="true"/>
				</behavior>
				<behavior name="HCSMS.Service.Impl.FrontDeskRequestBehavior">
					<serviceMetadata httpGetEnabled="true"/>
					<serviceDebug includeExceptionDetailInFaults="true"/>
				</behavior>
			</serviceBehaviors>
		</behaviors>
	</system.serviceModel>
</configuration>
